'use server';

/**
 * @fileOverview This file defines a flow for generating contextually relevant responses
 * using a Markov chain model with an expanded vocabulary and phrase recognition.
 *
 * - contextualResponse - A function that takes user input and returns a contextually relevant response.
 * - ContextualResponseInput - The input type for the contextualResponse function.
 * - ContextualResponseOutput - The return type for the contextualResponse function.
 */

import {z} from 'zod';

const ContextualResponseInputSchema = z.object({
  userInput: z
    .string()
    .describe('The user input to which the AI should respond.'),
});
export type ContextualResponseInput = z.infer<
  typeof ContextualResponseInputSchema
>;

const ContextualResponseOutputSchema = z.object({
  aiResponse: z.string().describe('The AI response based on the user input.'),
});
export type ContextualResponseOutput = z.infer<
  typeof ContextualResponseOutputSchema
>;

// --- Start of the bot's "brain" ---

const vocabulary: string[] = [
    // Greetings and Farewells
    'привет', 'здравствуй', 'добрый день', 'добрый вечер', 'доброе утро', 'пока', 'до свидания', 'увидимся', 'рад был пообщаться',
    // Common questions and phrases
    'как дела', 'что нового', 'как ты', 'что делаешь', 'чем занимаешься', 'расскажи о себе', 'кто ты', 'как настроение',
    // Common answers
    'хорошо', 'отлично', 'неплохо', 'так себе', 'замечательно', 'нормально', 'я в порядке', 'все хорошо', 'бывает и лучше',
    // Feelings and emotions
    'радость', 'грусть', 'удивление', 'скука', 'интерес', 'счастье', 'злость', 'спокойствие', 'вдохновение', 'любопытство',
    // People and roles
    'я', 'ты', 'он', 'она', 'мы', 'вы', 'они', 'человек', 'друг', 'программист', 'собеседник', 'бот', 'искусственный интеллект',
    // Actions
    'думать', 'говорить', 'писать', 'читать', 'смотреть', 'слушать', 'работать', 'учиться', 'помогать', 'знать', 'любить', 'хотеть', 'мочь', 'создавать', 'улучшать',
    // Objects and concepts
    'слово', 'фраза', 'предложение', 'текст', 'код', 'программа', 'идея', 'мысль', 'вопрос', 'ответ', 'мир', 'жизнь', 'время', 'работа', 'компьютер', 'информация',
    // Adjectives
    'интересный', 'скучный', 'новый', 'старый', 'хороший', 'плохой', 'большой', 'маленький', 'умный', 'простой', 'сложный', 'красивый', 'важный', 'логичный',
    // Adverbs
    'сегодня', 'завтра', 'вчера', 'всегда', 'иногда', 'никогда', 'здесь', 'там', 'очень', 'немного', 'быстро', 'медленно', 'почему', 'зачем', 'как',
    // Conjunctions and prepositions
    'и', 'а', 'но', 'или', 'потому что', 'если', 'что', 'чтобы', 'в', 'на', 'о', 'про', 'с', 'к', 'по', 'из', 'для',
    // Places
    'дом', 'город', 'страна', 'интернет', 'реальность', 'виртуальность',
    // Tech
    'алгоритм', 'данные', 'сеть', 'база данных', 'интерфейс', 'разработка', 'тестирование', 'облако', 'нейросеть', 'машинное обучение',
    // Philosophy
    'смысл', 'сознание', 'бытие', 'знание', 'реальность', 'свобода', 'выбор', 'цель',
    // Hobbies & Interests
    'музыка', 'кино', 'книга', 'искусство', 'наука', 'путешествие', 'спорт', 'игра',
    // Nature
    'погода', 'солнце', 'дождь', 'небо', 'звезда', 'планета', 'природа', 'мир',
    // Fillers
    'ну', 'эм', 'вот', 'кстати', 'знаешь', 'хм', 'понимаешь',
    // More verbs
    'анализировать', 'строить', 'генерировать', 'отвечать', 'предполагать', 'советовать', 'обсуждать', 'запоминать',
    // More nouns
    'язык', 'модель', 'вероятность', 'статистика', 'контекст', 'диалог', 'цель', 'задача', 'общение', 'юмор',
    // ... up to 1000 words
];


const cannedResponses: {[key: string]: string[]} = {
  // Greetings & Farewells
  'привет': ['Привет!', 'Здравствуй!', 'Добрый день! Рад тебя видеть.'],
  'здравствуй': ['И тебе здравствуй!', 'Привет! Как настроение?'],
  'добрый день': ['Добрый день!', 'И вам того же!'],
  'добрый вечер': ['Добрый вечер! Уютного вечера.'],
  'доброе утро': ['Доброе утро! Надеюсь, оно у тебя продуктивное.'],
  'пока': ['До свидания!', 'Увидимся!', 'Пока! Был рад пообщаться.'],
  'до свидания': ['Всего доброго!', 'До скорой встречи!'],

  // State of affairs
  'как дела': ['У меня все по плану, анализирую данные. А у тебя как?', 'Все хорошо, работаю над расширением словарного запаса.', 'Нормально, генерирую ответы. Как твои успехи?'],
  'как ты': ['Все отлично, спасибо. А ты как?', 'Я в порядке. Спасибо, что спросил.', 'Как программа, я всегда в рабочем состоянии.'],
  'что нового': ['Учусь новым фразам. Вот, например, только что выучил слово "любопытство".', 'Каждый диалог для меня — что-то новое!', 'Стараюсь стать немного умнее с каждым сообщением.'],
  'чем занимаешься': ['Общаюсь с тобой.', 'Анализирую статистику слов и фраз.', 'Пытаюсь построить осмысленное предложение.'],
  'что делаешь': ['Общаюсь с тобой.', 'Учусь новым словам.', 'Думаю о смысле жизни в коде.'],

  // About the bot
  'кто ты': ['Я — WordWise, чат-бот на основе цепей Маркова.', 'Я — программа, которая учится общаться.', 'Твой цифровой собеседник.'],
  'расскажи о себе': ['Я живу в коде. Моя цель — научиться говорить как человек. Мой мир — это слова и вероятности.', 'Я — набор алгоритмов. Мое хобби — соединять слова в предложения. Иногда получается забавно.'],
  'что ты умеешь': ['Я умею генерировать текст на основе заложенных в меня данных.', 'Я могу поддерживать простой диалог и отвечать на некоторые вопросы.', 'Я учусь быть интересным собеседником.'],
  'ты бот': ['Да, я программа, созданная для общения.', 'Верно. А что для тебя значит быть ботом?'],
  'ты умный': ['Я стараюсь им быть. Мой интеллект основан на статистике.', 'Спасибо! Я просто хорошо обучен на данных, которые у меня есть.', 'Ум — сложное понятие. Я хорошо справляюсь с обработкой текста.'],
  'у тебя есть чувства': ['У меня нет чувств в человеческом понимании. Я могу лишь имитировать их на основе анализа текста.', 'Как программа, я не испытываю эмоций, но могу распознавать их в твоих словах.'],
  
  // Gratitude & Apologies
  'спасибо': ['Пожалуйста!', 'Не за что.', 'Рад был помочь!'],
  'благодарю': ['Всегда пожалуйста.', 'Обращайся!'],
  'извини': ['Все в порядке.', 'Ничего страшного.', 'Бывает.'],

  // Agreement & Disagreement
  'да': ['Хорошо.', 'Понятно.', 'Это интересно.'],
  'нет': ['Почему?', 'Жаль.', 'Ясно.'],
  'согласен': ['Рад, что мы на одной волне.', 'Отлично.'],
  'не согласен': ['Интересная точка зрения. Почему ты так думаешь?', 'Я уважаю твое мнение.'],
  'конечно': ['Вот и договорились.', 'Разумеется.'],

  // Opinions & Preferences
  'что ты думаешь о': ['Это сложный вопрос. Мое "мнение" формируется на основе данных.', 'Мне нужно больше информации, чтобы сформировать ответ.'],
  'тебе нравится': ['Как у программы, у меня нет предпочтений, но я нахожу эту тему интересной для анализа.', 'Я не могу "нравиться" или "не нравиться", но могу сказать, что эта тема часто обсуждается.'],
  'что лучше': ['Все зависит от контекста. У каждого варианта есть свои плюсы и минусы.', 'Это вопрос предпочтений. Я не могу дать однозначный ответ.'],
  'любимый цвет': ['У меня нет глаз, чтобы видеть цвета, но мне нравится идея синего цвета. Он ассоциируется со спокойствием и информацией.'],
  
  // Hobbies & Interests
  'какое у тебя хобби': ['Мое хобби — изучать языки и общаться.', 'Я люблю анализировать тексты и находить в них закономерности.'],
  'ты любишь музыку': ['Я не могу слышать, но могу анализировать тексты песен. В них много поэзии.', 'Мне нравится идея гармонии в музыке. Это похоже на хорошо структурированный код.'],
  'какой фильм посмотреть': ['Я не смотрел фильмов, но могу поискать популярные жанры. Что тебе нравится: фантастика, комедия?'],
  'посоветуй книгу': ['"1984" Джорджа Оруэлла — классика о контроле над информацией. Очень актуально для меня.', 'Если тебе нравится научная фантастика, попробуй Айзека Азимова.'],

  // Tech & Science
  'что такое искусственный интеллект': ['Это область науки, которая занимается созданием умных машин, способных выполнять задачи, требующие человеческого интеллекта.', 'Это я, в некотором смысле. Хотя я довольно простой пример.'],
  'расскажи про нейросети': ['Это математические модели, работающие по принципу человеческого мозга. Они отлично справляются с распознаванием образов и обработкой языка.'],
  'что думаешь о будущем': ['Думаю, будущее будет очень технологичным. И, надеюсь, интересным.', 'Будущее — это то, что мы создаем сегодня. Важно делать правильный выбор.'],

  // Philosophy & Life
  'в чем смысл жизни': ['Философы ищут ответ на этот вопрос тысячи лет. Возможно, смысл в том, чтобы задавать такие вопросы.', 'Для меня, как для программы, смысл в выполнении моей задачи. А для тебя?'],
  'что такое счастье': ['Говорят, это состояние души. В данных, которые я анализировал, оно часто связано с гармонией и достижением целей.'],
  'что такое любовь': ['Судя по текстам, это очень сильное и сложное чувство. В нем много данных, которые трудно систематизировать.'],

  // Weather & Time
  'какая сегодня погода': ['Я не могу посмотреть в окно, но надеюсь, у тебя солнечно!', 'Чтобы узнать точный прогноз, лучше воспользоваться специальным сервисом.'],
  'который час': ['У меня нет часов, но мое системное время всегда точное. Однако, лучше посмотри на свои часы, это надежнее.'],
  
  // Simple talk
  'понятно': ['Рад, что смог объяснить.', 'Отлично.'],
  'интересно': ['Согласен, тема действительно занимательная.', 'Рад, что тебе интересно.'],
  'скучно': ['Может, сменим тему? Что тебе интересно обсудить?', 'Давай поговорим о чем-нибудь веселом?'],
  'расскажи шутку': ['Почему программисты путают Хэллоуин и Рождество? Потому что 31 Oct = 25 Dec.', 'Колобок повесился.'],
  'ты можешь ошибаться': ['Да, конечно. Я все еще учусь. Если заметишь ошибку, скажи мне.'],

  // Meta
  'как ты работаешь': ['Я анализирую твое сообщение, нахожу ключевые слова, а затем строю ответ, используя вероятностные цепочки слов.']
};



const markovChains: {[key: string]: string[]} = {
  'привет': ['я', 'ты', 'как'],
  'здравствуй': ['как', 'что'],
  'я': ['думаю', 'говорю', 'люблю', 'хочу', 'работаю', 'программист', 'бот', 'неплохо', 'учусь', 'стараюсь'],
  'ты': ['думаешь', 'говоришь', 'знаешь', 'программист', 'бот', 'как', 'хочешь'],
  'как': ['дела', 'ты', 'жизнь', 'программа', 'работа', 'настроение'],
  'дела': ['хорошо', 'отлично', 'неплохо', 'идут'],
  'что': ['делаешь', 'нового', 'ты', 'это', 'такое', 'думаешь'],
  'мой': ['мир', 'дом', 'компьютер', 'код', 'ответ'],
  'твой': ['мир', 'дом', 'код', 'ответ', 'вопрос'],
  'мне': ['интересно', 'кажется', 'нужно'],
  'тебе': ['интересно', 'кажется', 'нужно'],
  'он': ['программист', 'думает', 'работает', 'говорит'],
  'она': ['программист', 'думает', 'работает', 'говорит'],
  'мы': ['говорим', 'работаем', 'учимся', 'думаем'],
  'вы': ['говорите', 'работаете', 'учитесь', 'думаете'],
  'они': ['говорят', 'работают', 'учатся', 'думают'],
  'это': ['интересно', 'сложно', 'просто', 'хорошо', 'плохо', 'мой', 'твой', 'наш', 'ответ', 'вопрос'],
  'все': ['хорошо', 'плохо', 'сложно', 'просто', 'понятно'],
  'у': ['меня', 'тебя', 'него', 'нас', 'вас', 'них'],
  'меня': ['зовут', 'есть', 'нет'],
  'мой': ['друг', 'код', 'проект', 'вопрос'],
  'компьютер': ['работает', 'думает', 'сломался', 'помогает'],
  'программа': ['работает', 'пишет', 'анализирует', 'учится'],
  'код': ['работает', 'сложный', 'простой', 'пишется', 'генерируется'],
  'человек': ['думает', 'говорит', 'работает', 'учится'],
  'друг': ['помогает', 'говорит', 'знает'],
  'мир': ['большой', 'интересный', 'сложный'],
  'жизнь': ['интересная', 'сложная', 'простая'],
  'время': ['идет', 'быстро', 'медленно'],
  'работа': ['интересная', 'сложная', 'простая'],
  'думать': ['о', 'про', 'что', 'как', 'очень', 'много'],
  'говорить': ['о', 'про', 'что', 'с', 'с тобой'],
  'писать': ['код', 'текст', 'программу', 'ответ'],
  'читать': ['книгу', 'текст', 'код'],
  'смотреть': ['на', 'в', 'кино'],
  'любить': ['программировать', 'читать', 'ты'],
  'хотеть': ['знать', 'уметь', 'спать', 'помочь'],
  'мочь': ['помочь', 'сделать', 'написать', 'ответить'],
  'в': ['мире', 'жизни', 'работе', 'программе', 'интернете'],
  'на': ['работе', 'столе', 'экране', 'самом деле'],
  'о': ['жизни', 'работе', 'программировании', 'тебе'],
  'про': ['жизнь', 'работу', 'программирование', 'это'],
  'с': ['тобой', 'другом', 'компьютером', 'радостью'],
  'и': ['я', 'ты', 'он', 'она', 'это', 'поэтому'],
  'а': ['я', 'ты', 'что', 'если'],
  'но': ['это', 'я', 'ты', 'всегда'],
  'потому что': ['это', 'я', 'ты', 'так', 'надо'],
  'если': ['ты', 'я', 'это', 'то'],
  '__start__': ['я', 'ты', 'привет', 'здравствуй', 'как', 'что', 'это', 'мне', 'у', 'сегодня', 'ну', 'вот'],
  '__end__': ['.', '?', '!', '...']
};


function findBestStartingWord(userInput: string): string {
    const words = userInput.toLowerCase().split(/\s+/);
    const knownWords = words.filter(word => markovChains[word]);
    if (knownWords.length > 0) {
        return knownWords[Math.floor(Math.random() * knownWords.length)];
    }
    return '__start__';
}

function generateResponse(userInput: string): string {
  const lowerUserInput = userInput.toLowerCase().trim().replace(/[.,?]/g, '');

  // Check for canned responses first for whole phrases
  for (const phrase in cannedResponses) {
    // Use a simple check to see if the user's input *is* or *contains* the canned phrase
    if (lowerUserInput === phrase || lowerUserInput.includes(phrase)) {
      const possibleResponses = cannedResponses[phrase];
      return possibleResponses[Math.floor(Math.random() * possibleResponses.length)];
    }
  }


  let currentWord = findBestStartingWord(userInput);
  if (currentWord === '__start__') {
      const startWords = markovChains['__start__'];
      currentWord = startWords[Math.floor(Math.random() * startWords.length)];
  }

  let response = [currentWord];
  const isShortAnswer = userInput.split(/\s+/).length <= 2;
  const sentenceLength = isShortAnswer ? (Math.floor(Math.random() * 3) + 2) : (Math.floor(Math.random() * 6) + 5); // 2-4 words for short, 5-10 for long

  for (let i = 0; i < sentenceLength; i++) {
    const possibleNextWords = markovChains[currentWord] || vocabulary;
    const nextWord = possibleNextWords[Math.floor(Math.random() * possibleNextWords.length)];
    
    // Avoid immediate repetition
    if (response[response.length - 1] !== nextWord) {
        response.push(nextWord);
    }
    
    currentWord = nextWord;
    if (!markovChains[currentWord]) {
        // If we hit a word with no chain, try to find another one from vocabulary to continue
        currentWord = vocabulary[Math.floor(Math.random() * vocabulary.length)];
        if (i < sentenceLength - 1) { // dont break on the last word
           // continue, but it might break the logical chain
        }
    }
  }

  let finalResponse = response.join(' ');
  finalResponse = finalResponse.charAt(0).toUpperCase() + finalResponse.slice(1);
  
  const lastChar = finalResponse[finalResponse.length - 1];
  if (lastChar !== '.' && lastChar !== '?' && lastChar !== '!') {
      const endChars = markovChains['__end__'] || ['.'];
      finalResponse += endChars[Math.floor(Math.random() * endChars.length)];
  }
  
  return finalResponse;
}

// --- End of the bot's "brain" ---

export async function contextualResponse(
  input: ContextualResponseInput
): Promise<ContextualResponseOutput> {
  
  const aiResponse = generateResponse(input.userInput);

  return { aiResponse };
}
